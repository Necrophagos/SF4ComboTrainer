<UserControl xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
    xmlns:cal="http://www.caliburnproject.org"
    xmlns:converters="clr-namespace:FrameTrapped.Common.Converters;assembly=FrameTrapped.Common"
    x:Class="FrameTrapped.ComboTrainer.Views.TimeLineItemView"
    Width="340" Margin="2"
    cal:Message.Attach="[Event LostKeyboardFocus] = [Action DeHighlight];[Event GotKeyboardFocus] = [Action Highlight]">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/FrameTrapped.Common;component/Resources/Themes/Common/Generic.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/FrameTrapped.Common;component/Resources/Themes/Common/Brushes.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/FrameTrapped.Common;component/Resources/Themes/Common/Controls.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/FrameTrapped.Common;component/Resources/Icons/SFInputIcons.xaml"/>

                <ResourceDictionary Source="pack://application:,,,/FrameTrapped.Common;component/Resources/MergedCommonResources.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <converters:EnumBooleanConverter x:Key="enumBooleanConverter"/>
            <converters:BoolToCollapsedConverter x:Key="boolToCollapsedConverter" />
            <converters:BoolToVisibleConverter x:Key="boolToVisibleConverter" />
            
            <RadialGradientBrush x:Key="ButtonBackgroundBrush">
                <GradientStop Color="White" Offset="0.75"/>
                <GradientStop Color="LightGray" Offset="1"/>
            </RadialGradientBrush>

            <Style TargetType="{x:Type RadioButton}" BasedOn="{StaticResource MetroCircleToggleButtonStyle}">
                <Setter Property="Margin" Value="2" />
                <Setter Property="Padding" Value="3" />
                <Setter Property="Width" Value="42" />
                <Setter Property="Height" Value="42" />
                <Setter Property="Background" Value="{StaticResource ButtonBackgroundBrush}" />
            </Style>

            <Style TargetType="{x:Type UniformGrid}" >
                <Setter Property="Margin" Value="5" />
            </Style>

            <Style x:Key="CustomToggle" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource MetroCircleToggleButtonStyle}">
                <Setter Property="Margin" Value="0" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="Width" Value="42" />
                <Setter Property="Height" Value="42" />
                <Setter Property="Background" Value="{StaticResource ButtonBackgroundBrush}" />
            </Style>

            <Style x:Key="CustomButton" TargetType="{x:Type Button}" BasedOn="{StaticResource MetroCircleButtonStyle}">
                <Setter Property="Margin" Value="0" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="Background" Value="{StaticResource ButtonBackgroundBrush}" />
            </Style>
            
            <Style x:Key="DirectionRectangleStyle" TargetType="{x:Type Rectangle}"  >
                <Setter Property="Width" Value="28"/>
                <Setter Property="Height" Value="28"/>
                <Setter Property="Opacity" 
                        Value="{Binding RelativeSource={RelativeSource AncestorType=ToggleButton},
                         Path=IsChecked,
                         Converter={StaticResource boolToOpacityConverter}}"/>
            </Style>

            <Style x:Key="ButtonRectangleStyle" TargetType="{x:Type Rectangle}">
                <Setter Property="Width" Value="16"/>
                <Setter Property="Height" Value="16"/>
            </Style>

            <Style x:Key="InputRectangleStyle" TargetType="{x:Type Rectangle}"  >
                <Setter Property="Width" Value="28"/>
                <Setter Property="Height" Value="28"/>
                <Setter Property="Opacity" 
                        Value="{Binding RelativeSource={RelativeSource AncestorType=ToggleButton},
                         Path=IsChecked,
                         Converter={StaticResource boolToOpacityConverter}}"/>
            </Style>

           
        </ResourceDictionary>
    </UserControl.Resources>
    <StackPanel>
        <DockPanel>
            <TextBlock x:Name="WaitFrames" DockPanel.Dock="Right"/>
            <StackPanel Orientation="Horizontal" >
                <Rectangle Fill="{DynamicResource DirectionUpBack}" Style="{StaticResource DirectionRectangleStyle}"  
               Tag="{Binding Direction, Converter={StaticResource enumBooleanConverter},ConverterParameter=UpBack,FallbackValue=false}"
                Visibility="{Binding Tag, Converter={StaticResource boolToCollapsedConverter}, RelativeSource={RelativeSource Self}}"/>
                <Rectangle Fill="{DynamicResource DirectionUp}" Style="{StaticResource DirectionRectangleStyle}" 
                  Tag="{Binding Direction, Converter={StaticResource enumBooleanConverter},ConverterParameter=Up,FallbackValue=false}"
                Visibility="{Binding Tag, Converter={StaticResource boolToCollapsedConverter}, RelativeSource={RelativeSource Self}}"/>
                <Rectangle Fill="{DynamicResource DirectionUpForward}" Style="{StaticResource DirectionRectangleStyle}" 
                  Tag="{Binding Direction, Converter={StaticResource enumBooleanConverter},ConverterParameter=UpForward,FallbackValue=false}"
                Visibility="{Binding Tag, Converter={StaticResource boolToCollapsedConverter}, RelativeSource={RelativeSource Self}}"/>

                <Rectangle Fill="{DynamicResource DirectionBack}" Style="{StaticResource DirectionRectangleStyle}" 
                  Tag="{Binding Direction, Converter={StaticResource enumBooleanConverter},ConverterParameter=Back,FallbackValue=false}"
                Visibility="{Binding Tag, Converter={StaticResource boolToCollapsedConverter}, RelativeSource={RelativeSource Self}}"/>
                <Rectangle Fill="{DynamicResource DirectionNeutral}" Style="{StaticResource DirectionRectangleStyle}" 
                  Tag="{Binding Direction, Converter={StaticResource enumBooleanConverter},ConverterParameter=Neutral,FallbackValue=false}"
                Visibility="{Binding Tag, Converter={StaticResource boolToCollapsedConverter}, RelativeSource={RelativeSource Self}}"/>
                <Rectangle Fill="{DynamicResource DirectionForward}" Style="{StaticResource DirectionRectangleStyle}" 
               Tag="{Binding Direction, Converter={StaticResource enumBooleanConverter},ConverterParameter=Forward,FallbackValue=false}"
                Visibility="{Binding Tag, Converter={StaticResource boolToCollapsedConverter}, RelativeSource={RelativeSource Self}}"/>

                <Rectangle Fill="{DynamicResource DirectionDownBack}" Style="{StaticResource DirectionRectangleStyle}" 
               Tag="{Binding Direction, Converter={StaticResource enumBooleanConverter},ConverterParameter=DownBack,FallbackValue=false}"
                Visibility="{Binding Tag, Converter={StaticResource boolToCollapsedConverter}, RelativeSource={RelativeSource Self}}"/>
                <Rectangle Fill="{DynamicResource DirectionDown}" Style="{StaticResource DirectionRectangleStyle}" 
               Tag="{Binding Direction, Converter={StaticResource enumBooleanConverter},ConverterParameter=Down,FallbackValue=false}"
                Visibility="{Binding Tag, Converter={StaticResource boolToCollapsedConverter}, RelativeSource={RelativeSource Self}}"/>
                <Rectangle Fill="{DynamicResource DirectionDownForward}" Style="{StaticResource DirectionRectangleStyle}" 
               Tag="{Binding Direction, Converter={StaticResource enumBooleanConverter},ConverterParameter=DownForward,FallbackValue=false}"
               Visibility="{Binding Tag, Converter={StaticResource boolToCollapsedConverter}, RelativeSource={RelativeSource Self}}"/>

                <Rectangle Style="{StaticResource InputRectangleStyle}" Fill="{DynamicResource LPIcon}" Visibility="{Binding Light_Punch,Converter={StaticResource boolToCollapsedConverter}}" />
                <Rectangle Style="{StaticResource InputRectangleStyle}" Fill="{DynamicResource MPIcon}" Visibility="{Binding Medium_Punch,Converter={StaticResource boolToCollapsedConverter}}" />
                <Rectangle Style="{StaticResource InputRectangleStyle}" Fill="{DynamicResource HPIcon}" Visibility="{Binding Hard_Punch, Converter={StaticResource boolToCollapsedConverter}}" />

                <Rectangle Style="{StaticResource InputRectangleStyle}" Fill="{DynamicResource LKIcon}" Visibility="{Binding Light_Kick,Converter={StaticResource boolToCollapsedConverter}}" />
                <Rectangle Style="{StaticResource InputRectangleStyle}" Fill="{DynamicResource MKIcon}" Visibility="{Binding Medium_Kick,Converter={StaticResource boolToCollapsedConverter}}" />
                <Rectangle Style="{StaticResource InputRectangleStyle}" Fill="{DynamicResource HKIcon}" Visibility="{Binding Hard_Kick, Converter={StaticResource boolToCollapsedConverter}}" />

            </StackPanel>
        </DockPanel>
        <Grid x:Name="InputItemViewModel" 
              DockPanel.Dock="Bottom"  
              Visibility="{Binding IsActiveItem, Converter={StaticResource boolToCollapsedConverter}}">
            <Grid DataContext="{Binding InputItemViewModel}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Grid Grid.Row="0" Grid.ColumnSpan="2" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <UniformGrid Rows="3" Columns="3" 
			                HorizontalAlignment="Center"
			                VerticalAlignment="Center" >
                        <RadioButton GroupName="grpDirection" IsChecked="{Binding Direction, Converter={StaticResource enumBooleanConverter},ConverterParameter=UpBack}">
                            <RadioButton.RenderTransform>
                                <TranslateTransform X="9" Y="8" />
                            </RadioButton.RenderTransform>
                            <Rectangle Fill="{DynamicResource DirectionUpBack}" Style="{StaticResource DirectionRectangleStyle}" />
                        </RadioButton>
                        <RadioButton GroupName="grpDirection" IsChecked="{Binding Direction, Converter={StaticResource enumBooleanConverter},ConverterParameter=Up}">
                            <Rectangle Fill="{DynamicResource DirectionUp}" Style="{StaticResource DirectionRectangleStyle}"/>
                        </RadioButton>
                        <RadioButton GroupName="grpDirection" IsChecked="{Binding Direction, Converter={StaticResource enumBooleanConverter},ConverterParameter=UpForward}">
                            <RadioButton.RenderTransform>
                                <TranslateTransform X="-9" Y="8" />
                            </RadioButton.RenderTransform>
                            <Rectangle  Fill="{DynamicResource DirectionUpForward}" Style="{StaticResource DirectionRectangleStyle}"/>
                        </RadioButton>
                        <RadioButton GroupName="grpDirection" IsChecked="{Binding Direction, Converter={StaticResource enumBooleanConverter},ConverterParameter=Back}">
                            <Rectangle Fill="{DynamicResource DirectionBack}" Style="{StaticResource DirectionRectangleStyle}"/>
                        </RadioButton>
                        <RadioButton GroupName="grpDirection" IsChecked="{Binding Direction, Converter={StaticResource enumBooleanConverter},ConverterParameter=Neutral}">
                            <RadioButton.RenderTransform>
                                <ScaleTransform ScaleX="1.05" CenterX="24" 
                                         ScaleY="1.05" CenterY="24"/>
                            </RadioButton.RenderTransform>
                            <Rectangle Fill="{DynamicResource DirectionNeutral}" Style="{StaticResource DirectionRectangleStyle}"/>
                        </RadioButton>
                        <RadioButton GroupName="grpDirection" IsChecked="{Binding Direction, Converter={StaticResource enumBooleanConverter},ConverterParameter=Forward}">
                            <Rectangle Fill="{DynamicResource DirectionForward}" Style="{StaticResource DirectionRectangleStyle}" />
                        </RadioButton>
                        <RadioButton GroupName="grpDirection" IsChecked="{Binding Direction, Converter={StaticResource enumBooleanConverter},ConverterParameter=DownBack}">
                            <RadioButton.RenderTransform>
                                <TranslateTransform X="9" Y="-8" />
                            </RadioButton.RenderTransform>
                            <Rectangle Fill="{DynamicResource DirectionDownBack}" Style="{StaticResource DirectionRectangleStyle}"/>
                        </RadioButton>
                        <RadioButton GroupName="grpDirection" IsChecked="{Binding Direction, Converter={StaticResource enumBooleanConverter},ConverterParameter=Down}">
                            <Rectangle Fill="{DynamicResource DirectionDown}" Style="{StaticResource DirectionRectangleStyle}"/>
                        </RadioButton>
                        <RadioButton GroupName="grpDirection" IsChecked="{Binding Direction, Converter={StaticResource enumBooleanConverter},ConverterParameter=DownForward}">
                            <RadioButton.RenderTransform>
                                <TranslateTransform X="-9" Y="-8" />
                            </RadioButton.RenderTransform>
                            <Rectangle Fill="{DynamicResource DirectionDownForward}" Style="{StaticResource DirectionRectangleStyle}"/>
                        </RadioButton>
                    </UniformGrid>
                    <UniformGrid Grid.Column="1" Rows="2" Columns="3"
			HorizontalAlignment="Center"
			VerticalAlignment="Center">
                        <ToggleButton IsChecked="{Binding Light_Punch, Mode=TwoWay}" Style="{StaticResource CustomToggle}">
                            <StackPanel>
                                <Rectangle Style="{StaticResource InputRectangleStyle}" Fill="{DynamicResource LPIcon}" Visibility="{Binding 
                         RelativeSource={RelativeSource AncestorType=ToggleButton},
                         Path=IsChecked,
                         Converter={StaticResource boolToCollapsedConverter}}" />
                                <Rectangle Style="{StaticResource InputRectangleStyle}" Fill="{DynamicResource PIcon}" Visibility="{Binding 
                         RelativeSource={RelativeSource AncestorType=ToggleButton},
                         Path=IsChecked,
                         Converter={StaticResource boolToVisibleConverter}}" />
                            </StackPanel>
                        </ToggleButton>
                        <ToggleButton IsChecked="{Binding Medium_Punch, Mode=TwoWay}" Style="{StaticResource CustomToggle}">
                            <StackPanel>
                                <Rectangle Style="{StaticResource InputRectangleStyle}" Fill="{DynamicResource MPIcon}" Visibility="{Binding 
                         RelativeSource={RelativeSource AncestorType=ToggleButton},
                         Path=IsChecked,
                         Converter={StaticResource boolToCollapsedConverter}}" />
                                <Rectangle Style="{StaticResource InputRectangleStyle}" Fill="{DynamicResource PIcon}" Visibility="{Binding 
                         RelativeSource={RelativeSource AncestorType=ToggleButton},
                         Path=IsChecked,
                         Converter={StaticResource boolToVisibleConverter}}" />
                            </StackPanel>
                        </ToggleButton>
                        <ToggleButton IsChecked="{Binding Hard_Punch, Mode=TwoWay}" Style="{StaticResource CustomToggle}">
                            <StackPanel>
                                <Rectangle Style="{StaticResource InputRectangleStyle}" Fill="{DynamicResource HPIcon}" Visibility="{Binding 
                         RelativeSource={RelativeSource AncestorType=ToggleButton},
                         Path=IsChecked,
                         Converter={StaticResource boolToCollapsedConverter}}" />
                                <Rectangle Style="{StaticResource InputRectangleStyle}" Fill="{DynamicResource PIcon}" Visibility="{Binding 
                         RelativeSource={RelativeSource AncestorType=ToggleButton},
                         Path=IsChecked,
                         Converter={StaticResource boolToVisibleConverter}}" />
                            </StackPanel>
                        </ToggleButton>
                        <ToggleButton IsChecked="{Binding Light_Kick, Mode=TwoWay}" Style="{StaticResource CustomToggle}">
                            <StackPanel>
                                <Rectangle Style="{StaticResource InputRectangleStyle}" Fill="{DynamicResource LKIcon}" Visibility="{Binding 
                         RelativeSource={RelativeSource AncestorType=ToggleButton},
                         Path=IsChecked,
                         Converter={StaticResource boolToCollapsedConverter}}" />
                                <Rectangle Style="{StaticResource InputRectangleStyle}" Fill="{DynamicResource KIcon}" Visibility="{Binding 
                         RelativeSource={RelativeSource AncestorType=ToggleButton},
                         Path=IsChecked,
                         Converter={StaticResource boolToVisibleConverter}}" />
                            </StackPanel>
                        </ToggleButton>
                        <ToggleButton IsChecked="{Binding Medium_Kick, Mode=TwoWay}" Style="{StaticResource CustomToggle}">
                            <StackPanel>
                                <Rectangle Style="{StaticResource InputRectangleStyle}" Fill="{DynamicResource MKIcon}" Visibility="{Binding 
                         RelativeSource={RelativeSource AncestorType=ToggleButton},
                         Path=IsChecked,
                         Converter={StaticResource boolToCollapsedConverter}}" />
                                <Rectangle Style="{StaticResource InputRectangleStyle}" Fill="{DynamicResource KIcon}" Visibility="{Binding 
                         RelativeSource={RelativeSource AncestorType=ToggleButton},
                         Path=IsChecked,
                         Converter={StaticResource boolToVisibleConverter}}" />
                            </StackPanel>
                        </ToggleButton>
                        <ToggleButton IsChecked="{Binding Hard_Kick, Mode=TwoWay}" Style="{StaticResource CustomToggle}">
                            <StackPanel>
                                <Rectangle Style="{StaticResource InputRectangleStyle}" Fill="{DynamicResource HKIcon}" Visibility="{Binding 
                         RelativeSource={RelativeSource AncestorType=ToggleButton},
                         Path=IsChecked,
                         Converter={StaticResource boolToCollapsedConverter}}" />
                                <Rectangle Style="{StaticResource InputRectangleStyle}" Fill="{DynamicResource KIcon}" Visibility="{Binding 
                         RelativeSource={RelativeSource AncestorType=ToggleButton},
                         Path=IsChecked,
                         Converter={StaticResource boolToVisibleConverter}}" />
                            </StackPanel>
                        </ToggleButton>

                    </UniformGrid>
                    <ToggleButton Grid.Column="2"  VerticalAlignment="Center" IsChecked="{Binding PlaySound}">
                        <TextBlock Text="Play Sound" Width="50" TextWrapping="WrapWithOverflow" TextAlignment="Center" />
                    </ToggleButton>

                </Grid>
                <DockPanel Grid.Row="1" Margin="2" >
                    <Button DockPanel.Dock="Left" Style="{StaticResource CustomButton}" >
                        <Rectangle Fill="{DynamicResource DirectionBack}" Style="{StaticResource ButtonRectangleStyle}"/>
                    </Button>
                    <Button DockPanel.Dock="Right" Style="{StaticResource CustomButton}" >
                        <Rectangle Fill="{DynamicResource DirectionForward}" Style="{StaticResource ButtonRectangleStyle}"/>
                    </Button>

                    <Slider Width="300" HorizontalAlignment="Center" Value="{Binding WaitFrames,FallbackValue=1}" Style="{DynamicResource SliderStyle}" Maximum="300" Minimum="1"/>

                </DockPanel>
            </Grid>
        </Grid>
    </StackPanel>
</UserControl>