<Grid xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      x:Class="FrameTrapped.Input.Views.InputItemView"/>
    <!--xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
      xmlns:converters="clr-namespace:FrameTrapped.Common.Converters;assembly=FrameTrapped.Common"
      x:Class="FrameTrapped.Input.Views.InputItemView" 
      Width="340"
      mc:Ignorable="d" >
    <Grid.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/FrameTrapped.Common;component/Resources/Themes/Common/Generic.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/FrameTrapped.Common;component/Resources/Themes/Common/Brushes.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/FrameTrapped.Common;component/Resources/Themes/Common/Controls.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/FrameTrapped.Common;component/Resources/Icons/SFInputIcons.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <converters:EnumBooleanConverter x:Key="enumBooleanConverter"/>
            <converters:BoolToCollapsedConverter x:Key="boolToCollapsedConverter" />
            <converters:BoolToVisibleConverter x:Key="boolToVisibleConverter" />
            <RadialGradientBrush x:Key="ButtonBackgroundBrush">
                <GradientStop Color="White" Offset="0.75"/>
                <GradientStop Color="LightGray" Offset="1"/>
            </RadialGradientBrush>
            <Style TargetType="{x:Type RadioButton}" BasedOn="{StaticResource MetroCircleToggleButtonStyle}">
                <Setter Property="Margin" Value="2" />
                <Setter Property="Padding" Value="6" />
                <Setter Property="Width" Value="48" />
                <Setter Property="Height" Value="48" />
                <Setter Property="Background" Value="{StaticResource ButtonBackgroundBrush}" />
            </Style>
            <Style TargetType="{x:Type UniformGrid}" >
                <Setter Property="Margin" Value="5" />
            </Style>
            <Style x:Key="DirectionRectangleStyle" TargetType="{x:Type Rectangle}"  >
                <Setter Property="Width" Value="36"/>
                <Setter Property="Height" Value="36"/>
                <Setter Property="Opacity" Value="{Binding 
                         RelativeSource={RelativeSource AncestorType=ToggleButton},
                         Path=IsChecked,
                         Converter={StaticResource boolToOpacityConverter}}"/>
            </Style>
            <Style x:Key="InputRectangleStyle" TargetType="{x:Type Rectangle}"  >
                <Setter Property="Width" Value="50"/>
                <Setter Property="Height" Value="50"/>
                <Setter Property="Opacity" Value="{Binding 
                         RelativeSource={RelativeSource AncestorType=ToggleButton},
                         Path=IsChecked,
                         Converter={StaticResource boolToOpacityConverter}}"/>
            </Style>
            <Style x:Key="CustomToggle" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource MetroCircleToggleButtonStyle}">
                <Setter Property="Margin" Value="0" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="Width" Value="56" />
                <Setter Property="Height" Value="56" />
                <Setter Property="Background" Value="{StaticResource ButtonBackgroundBrush}" />
            </Style>
        </ResourceDictionary>

    </Grid.Resources>
    <Grid Height="Auto" Width="Auto">
        <Grid.RowDefinitions>
            <RowDefinition Height="160" />
            <RowDefinition />
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" Grid.ColumnSpan="2" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <UniformGrid  Rows="3" Columns="3" 
			HorizontalAlignment="Center"
			VerticalAlignment="Center" >
                <RadioButton GroupName="grpDirection" IsChecked="{Binding Direction, Converter={StaticResource enumBooleanConverter},ConverterParameter=UpBack}">
                    <RadioButton.RenderTransform>
                        <TranslateTransform X="9" Y="8" />
                    </RadioButton.RenderTransform>
                    <Rectangle Fill="{DynamicResource DirectionUpBack}" Style="{StaticResource DirectionRectangleStyle}" />
                </RadioButton>
                <RadioButton GroupName="grpDirection" IsChecked="{Binding Direction, Converter={StaticResource enumBooleanConverter},ConverterParameter=Up}">
                    <Rectangle Fill="{DynamicResource DirectionUp}" Style="{StaticResource DirectionRectangleStyle}"/>
                </RadioButton>
                <RadioButton GroupName="grpDirection" IsChecked="{Binding Direction, Converter={StaticResource enumBooleanConverter},ConverterParameter=UpForward}">
                    <RadioButton.RenderTransform>
                        <TranslateTransform X="-9" Y="8" />
                    </RadioButton.RenderTransform>
                    <Rectangle  Fill="{DynamicResource DirectionUpForward}" Style="{StaticResource DirectionRectangleStyle}"/>
                </RadioButton>
                <RadioButton GroupName="grpDirection" IsChecked="{Binding Direction, Converter={StaticResource enumBooleanConverter},ConverterParameter=Back}">
                    <Rectangle Fill="{DynamicResource DirectionBack}" Style="{StaticResource DirectionRectangleStyle}"/>
                </RadioButton>
                <RadioButton GroupName="grpDirection" IsChecked="{Binding Direction, Converter={StaticResource enumBooleanConverter},ConverterParameter=Neutral}">
                    <RadioButton.RenderTransform>
                        <ScaleTransform ScaleX="1.05" CenterX="24" 
                                         ScaleY="1.05" CenterY="24"/>
                    </RadioButton.RenderTransform>
                    <Rectangle Fill="{DynamicResource DirectionNeutral}" Style="{StaticResource DirectionRectangleStyle}"/>
                </RadioButton>
                <RadioButton GroupName="grpDirection" IsChecked="{Binding Direction, Converter={StaticResource enumBooleanConverter},ConverterParameter=Forward}">
                    <Rectangle Fill="{DynamicResource DirectionForward}" Style="{StaticResource DirectionRectangleStyle}" />
                </RadioButton>
                <RadioButton GroupName="grpDirection" IsChecked="{Binding Direction, Converter={StaticResource enumBooleanConverter},ConverterParameter=DownBack}">
                    <RadioButton.RenderTransform>
                        <TranslateTransform X="9" Y="-8" />
                    </RadioButton.RenderTransform>
                    <Rectangle Fill="{DynamicResource DirectionDownBack}" Style="{StaticResource DirectionRectangleStyle}"/>
                </RadioButton>
                <RadioButton GroupName="grpDirection" IsChecked="{Binding Direction, Converter={StaticResource enumBooleanConverter},ConverterParameter=Down}">
                    <Rectangle Fill="{DynamicResource DirectionDown}" Style="{StaticResource DirectionRectangleStyle}"/>
                </RadioButton>
                <RadioButton GroupName="grpDirection" IsChecked="{Binding Direction, Converter={StaticResource enumBooleanConverter},ConverterParameter=DownForward}">
                    <RadioButton.RenderTransform>
                        <TranslateTransform X="-9" Y="-8" />
                    </RadioButton.RenderTransform>
                    <Rectangle Fill="{DynamicResource DirectionDownForward}" Style="{StaticResource DirectionRectangleStyle}"/>
                </RadioButton>
            </UniformGrid>
            <UniformGrid Grid.Column="1" Rows="2" Columns="3"
			HorizontalAlignment="Center"
			VerticalAlignment="Center">
                <ToggleButton IsChecked="{Binding Light_Punch, Mode=TwoWay}" Style="{StaticResource CustomToggle}">
                    <StackPanel>
                        <Rectangle Style="{StaticResource InputRectangleStyle}" Fill="{DynamicResource LPIcon}" Visibility="{Binding 
                         RelativeSource={RelativeSource AncestorType=ToggleButton},
                         Path=IsChecked,
                         Converter={StaticResource boolToCollapsedConverter}}" />
                        <Rectangle Style="{StaticResource InputRectangleStyle}" Fill="{DynamicResource PIcon}" Visibility="{Binding 
                         RelativeSource={RelativeSource AncestorType=ToggleButton},
                         Path=IsChecked,
                         Converter={StaticResource boolToVisibleConverter}}" />
                    </StackPanel>
                </ToggleButton>
                <ToggleButton IsChecked="{Binding Medium_Punch, Mode=TwoWay}" Style="{StaticResource CustomToggle}">
                    <StackPanel>
                        <Rectangle Style="{StaticResource InputRectangleStyle}" Fill="{DynamicResource MPIcon}" Visibility="{Binding 
                         RelativeSource={RelativeSource AncestorType=ToggleButton},
                         Path=IsChecked,
                         Converter={StaticResource boolToCollapsedConverter}}" />
                        <Rectangle Style="{StaticResource InputRectangleStyle}" Fill="{DynamicResource PIcon}" Visibility="{Binding 
                         RelativeSource={RelativeSource AncestorType=ToggleButton},
                         Path=IsChecked,
                         Converter={StaticResource boolToVisibleConverter}}" />
                    </StackPanel>
                </ToggleButton>
                <ToggleButton IsChecked="{Binding Hard_Punch, Mode=TwoWay}" Style="{StaticResource CustomToggle}">
                    <StackPanel>
                        <Rectangle Style="{StaticResource InputRectangleStyle}" Fill="{DynamicResource HPIcon}" Visibility="{Binding 
                         RelativeSource={RelativeSource AncestorType=ToggleButton},
                         Path=IsChecked,
                         Converter={StaticResource boolToCollapsedConverter}}" />
                        <Rectangle Style="{StaticResource InputRectangleStyle}" Fill="{DynamicResource PIcon}" Visibility="{Binding 
                         RelativeSource={RelativeSource AncestorType=ToggleButton},
                         Path=IsChecked,
                         Converter={StaticResource boolToVisibleConverter}}" />
                    </StackPanel>
                </ToggleButton>
                <ToggleButton IsChecked="{Binding Light_Kick, Mode=TwoWay}" Style="{StaticResource CustomToggle}">
                    <StackPanel>
                        <Rectangle Style="{StaticResource InputRectangleStyle}" Fill="{DynamicResource LKIcon}" Visibility="{Binding 
                         RelativeSource={RelativeSource AncestorType=ToggleButton},
                         Path=IsChecked,
                         Converter={StaticResource boolToCollapsedConverter}}" />
                        <Rectangle Style="{StaticResource InputRectangleStyle}" Fill="{DynamicResource KIcon}" Visibility="{Binding 
                         RelativeSource={RelativeSource AncestorType=ToggleButton},
                         Path=IsChecked,
                         Converter={StaticResource boolToVisibleConverter}}" />
                    </StackPanel>
                </ToggleButton>
                <ToggleButton IsChecked="{Binding Medium_Kick, Mode=TwoWay}" Style="{StaticResource CustomToggle}">
                    <StackPanel>
                        <Rectangle Style="{StaticResource InputRectangleStyle}" Fill="{DynamicResource MKIcon}" Visibility="{Binding 
                         RelativeSource={RelativeSource AncestorType=ToggleButton},
                         Path=IsChecked,
                         Converter={StaticResource boolToCollapsedConverter}}" />
                        <Rectangle Style="{StaticResource InputRectangleStyle}" Fill="{DynamicResource KIcon}" Visibility="{Binding 
                         RelativeSource={RelativeSource AncestorType=ToggleButton},
                         Path=IsChecked,
                         Converter={StaticResource boolToVisibleConverter}}" />
                    </StackPanel>
                </ToggleButton>
                <ToggleButton IsChecked="{Binding Hard_Kick, Mode=TwoWay}" Style="{StaticResource CustomToggle}">
                    <StackPanel>
                        <Rectangle Style="{StaticResource InputRectangleStyle}" Fill="{DynamicResource HKIcon}" Visibility="{Binding 
                         RelativeSource={RelativeSource AncestorType=ToggleButton},
                         Path=IsChecked,
                         Converter={StaticResource boolToCollapsedConverter}}" />
                        <Rectangle Style="{StaticResource InputRectangleStyle}" Fill="{DynamicResource KIcon}" Visibility="{Binding 
                         RelativeSource={RelativeSource AncestorType=ToggleButton},
                         Path=IsChecked,
                         Converter={StaticResource boolToVisibleConverter}}" />
                    </StackPanel>
                </ToggleButton>

            </UniformGrid>
        </Grid>
        <Grid Grid.Row="1" Margin="5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Slider Grid.Column="0" VerticalAlignment="Center" Value="{Binding WaitFrames,FallbackValue=1}" Style="{DynamicResource SliderStyle}" Maximum="300" Minimum="1"/>
            <xctk:IntegerUpDown Grid.Column="1" VerticalAlignment="Center" Value="{Binding WaitFrames,FallbackValue=1}" Maximum="300" Minimum="1"/>
            <ToggleButton Grid.Column="2" Content="Play Sound" Width="Auto" IsChecked="{Binding PlaySound}"/>
        </Grid>
    </Grid>
</Grid>-->
